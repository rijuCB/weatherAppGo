// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rijuCB/weatherAppGo (interfaces: Iweather)

// Package mock_weatherAppGo is a generated GoMock package.
package mock_weatherAppGo

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIweather is a mock of Iweather interface.
type MockIweather struct {
	ctrl     *gomock.Controller
	recorder *MockIweatherMockRecorder
}

// MockIweatherMockRecorder is the mock recorder for MockIweather.
type MockIweatherMockRecorder struct {
	mock *MockIweather
}

// NewMockIweather creates a new mock instance.
func NewMockIweather(ctrl *gomock.Controller) *MockIweather {
	mock := &MockIweather{ctrl: ctrl}
	mock.recorder = &MockIweatherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIweather) EXPECT() *MockIweatherMockRecorder {
	return m.recorder
}

// GetRain mocks base method.
func (m *MockIweather) GetRain() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRain")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetRain indicates an expected call of GetRain.
func (mr *MockIweatherMockRecorder) GetRain() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRain", reflect.TypeOf((*MockIweather)(nil).GetRain))
}

// GetTemp mocks base method.
func (m *MockIweather) GetTemp() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemp")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetTemp indicates an expected call of GetTemp.
func (mr *MockIweatherMockRecorder) GetTemp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemp", reflect.TypeOf((*MockIweather)(nil).GetTemp))
}

// GetWind mocks base method.
func (m *MockIweather) GetWind() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWind")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetWind indicates an expected call of GetWind.
func (mr *MockIweatherMockRecorder) GetWind() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWind", reflect.TypeOf((*MockIweather)(nil).GetWind))
}
